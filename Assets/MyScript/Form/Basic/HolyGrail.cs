//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;
using UnityEngine.UI;
using UnityEngine.EventSystems;

public class HolyGrail : CardForm
{
    public HolyGrail(Card.CardSuit suit, Card.CardNumber number, Card.CardState state, Player owner, Game g)
        : base(new Card(Card.CardType.Basic, "Holy Grail", "HolyGrail", "Used to regain one unit of health or save one player when they are on the brink of death.",
        suit, number, state, owner),g)
    {

    }

    public void PerformHealing()
    {
        Player source = this.Form.Owner;
        mainAction = delegate()
        {
            if (source.Healing != null) source.StartCoroutine(source.Healing(1, source, source));
            if (game.GetBusyTask() < 0) game.PilesCollect();
        };
        //source.OnWaitingAction += Heal;
    }

    public void PerformSaving()
    {
        Player source = this.Form.Owner;
        mainAction = delegate()
        {
            if (source.Healing != null) source.StartCoroutine(source.Healing(1, source, source));
            if (game.GetBusyTask() < 0) game.PilesCollect();
        };
    }

    public override void UseCard()
    {
        Player source = this.Form.Owner;
        if (source.actionState == Player.ActionState.Free) PerformHealing();
        else if (source.actionState == Player.ActionState.WaitingSave) PerformSaving();
        base.UseCard();
    }
}


